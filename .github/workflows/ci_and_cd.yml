name: 프로젝트 배포

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: 버전 정보 추출
        id: get_version
        run: |
          RELEASE_VERSION_WITHOUT_V="$(cut -d'v' -f2 <<< ${GITHUB_REF#refs/*/})"
          echo ::set-output name=VERSION::$RELEASE_VERSION_WITHOUT_V

      - name: Gradle 캐싱 설정
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: dockerfile 갱신
        run: |
          cat dockerfile > dockerfile.temp
          
          echo "ENV SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}" >> dockerfile.temp
          echo "ENV LOGGING_LEVEL=${{ secrets.LOGGING_LEVEL }}" >> dockerfile.temp
          echo "ENV DATABASE_JDBC_URL=${{ secrets.DATABASE_JDBC_URL }}" >> dockerfile.temp
          echo "ENV MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}" >> dockerfile.temp
          echo "ENV MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> dockerfile.temp
          echo "ENV EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> dockerfile.temp
          echo "ENV EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> dockerfile.temp
          echo "ENV EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}" >> dockerfile.temp
          echo "ENV EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> dockerfile.temp
          echo "ENV REDIS_VERSION=${{ secrets.REDIS_HOST }}" >> dockerfile.temp
          echo "ENV REDIS_HOST=${{ secrets.REDIS_HOST }}" >> dockerfile.temp
          echo "ENV REDIS_PORT=${{ secrets.REDIS_PORT }}" >> dockerfile.temp
          echo "ENV REDIS_VOLUME=${{ secrets.REDIS_VOLUNE }}" >> dockerfile.temp
          echo "ENV REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> dockerfile.temp
          
          
          mv dockerfile.temp dockerfile

        working-directory: ./

      - name: Gradle 빌드
        run: ./gradlew build --no-daemon

      - name: PR에 테스트 커버리지 리포트 작성
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        with:
          title: 📝 테스트 커버리지 리포트
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 50
          min-coverage-changed-files: 50

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      - name: Docker Hub에 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_KEY }}

      - name: Docker 이미지 빌드 및 Docker Hub에 푸시 (tag)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_NAME }}:${{ github.sha }}

      - name: Docker 이미지 디제스트 값 출력
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Docker 이미지 빌드 및 Docker Hub에 푸시 (latest)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_NAME }}:latest

      - name: 어플리케이션 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker stop ${{ secrets.DOCKER_HUB_NAME }}
            sudo docker rm -f ${{ secrets.DOCKER_HUB_NAME }}
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_NAME }}:latest
            sudo docker run -p ${{ secrets.DOCKER_HUB_PORT }}:8080 \
              --name ${{ secrets.DOCKER_HUB_NAME }} \
              -d ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_NAME }}
